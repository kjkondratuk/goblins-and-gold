// Code generated by mockery v2.34.2. DO NOT EDIT.

package sequencer

import mock "github.com/stretchr/testify/mock"

// MockSequencerOpt is an autogenerated mock type for the SequencerOpt type
type MockSequencerOpt struct {
	mock.Mock
}

type MockSequencerOpt_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSequencerOpt) EXPECT() *MockSequencerOpt_Expecter {
	return &MockSequencerOpt_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: s
func (_m *MockSequencerOpt) Execute(s *sequencer) {
	_m.Called(s)
}

// MockSequencerOpt_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockSequencerOpt_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - s *sequencer
func (_e *MockSequencerOpt_Expecter) Execute(s interface{}) *MockSequencerOpt_Execute_Call {
	return &MockSequencerOpt_Execute_Call{Call: _e.mock.On("Execute", s)}
}

func (_c *MockSequencerOpt_Execute_Call) Run(run func(s *sequencer)) *MockSequencerOpt_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*sequencer))
	})
	return _c
}

func (_c *MockSequencerOpt_Execute_Call) Return() *MockSequencerOpt_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockSequencerOpt_Execute_Call) RunAndReturn(run func(*sequencer)) *MockSequencerOpt_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSequencerOpt creates a new instance of MockSequencerOpt. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSequencerOpt(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSequencerOpt {
	mock := &MockSequencerOpt{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
