// Code generated by mockery v2.34.2. DO NOT EDIT.

package state

import mock "github.com/stretchr/testify/mock"

// MockAppliableType is an autogenerated mock type for the AppliableType type
type MockAppliableType struct {
	mock.Mock
}

type MockAppliableType_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAppliableType) EXPECT() *MockAppliableType_Expecter {
	return &MockAppliableType_Expecter{mock: &_m.Mock}
}

// NewMockAppliableType creates a new instance of MockAppliableType. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAppliableType(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAppliableType {
	mock := &MockAppliableType{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
